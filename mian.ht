
int64 adesfd

int var1 := !(!(var1 != 5 and 6 = 5 or var67 > 5 or >= 6 . 6 + 6 / 3));this is the comment

global var1;

try
	throw ErrorMsg("ono")
catch (e):
	str var2345 := e
finally
	gg := "hello";

if (sad):
	var123 := 56;
	if (sad):
		varsdfcxszdc := 56
	aszd := 56



var66 := 5;
var outSometing;
switch (var66) {
case 1:
{
	outSometing := 1
	break
}
case 2:{
outSometing := 2
break;
}
case 3
{
outSometing := 3
break
}
case 4: {
outSometing := 4
break
}
case 5:
{
outSometing := 5
break;
}
case 6:{
outSometing := 6
break
}
defalut{
outSometing := 0
break;
}
}


for index in range(1, 5) {
bool var1 := yes;
}
arr12 := []
arr12.add("hello");
arr12.add("hello1")
arr12.add("hello2");
arr12.add("man");
int var12 := arr12.size();

int var1 := 5
str var12 := "hello `" `nwhats up" . HalloMan()
var1234 := "helllllllllo"
cmd, sd
gg, %2%
cmd, sd, %2%, %2%, 4, 4, 4, 4
hi
Sort, var1234
var jsVar1
let jsVar2
const jsVar3 := "some string yeah"


;;;;;;;;;;;;; adsf

/*
wasfddes
awe
sfae
sr
sdf
*/



while (var1)
{
; some code
}

if var1 != 5 and var5 = 6: {
; adf
}

var1 := !(var1 != 3)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

if QWAEDSFD
{
var34 := 5
} else {
		avaas := "adsf"
}

;;;;;;;;;;;

if QWAEDSFD
{
var34 := 5
else if () {
qwaesdf := awsd
} else {
		avaas := "adsf"
}


int strinfadsf
const ads
asd := 5
asd2 := 5;
arr arr1234
arr1234.add("hi1")
arr1234.add("hi2");
arr1234.add("hi3")
if (InStr(arr1234.index("hi2")))
{
print("hi")
}




var1 := "waesr wesr`nwers`nwaesrd`n"
Loop, Parse, var1, `n, `r
{

Loop, 5
{

Loop
{
if (A_Index >= 2) {
	break
}
else
{
	MsgBox, % A_Index
}
}

MsgBox, % A_Index
}

MsgBox, % A_LoopField
}

ads++
ads++;
ads--
ads--;

dffdsfs--


}

Loop, 5
{
console.log(A_Index)
if A_Index >= 100
{
break
}
}


str var1 := "WAEDSFESRFSRF ES ESDF ESD FE SDFG SDXF"

Loop, Parse, var1, " "
{
console.log(A_LoopField)
}

var1 := 5
