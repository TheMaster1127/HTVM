func str HTVMmatchStrRrplace(str line, str matchString, str replaceString)
{
str lineOut := ""
if (!InStr(line, matchString))
{
return line
}

str allDelimiters := " ()[]."

arr str lineArr

Loop, Parse, line
{
lineArr.add(A_LoopField)
}

int matchStringLEN := StrLen(matchString)




str sildingLine := ""

int isStart := 1


int i1 := 0

int hasFound := 0
int hasFound2 := 0


Loop, 1
{

sildingLine := ""
isStart := 1
i1 := 0
hasFound := 0
hasFound2 := 0

Loop, % lineArr.size()
{

if (A_Index != 0)
{
isStart := 0
} 
sildingLine := ""
Loop, % matchStringLEN
{
if (A_Index + i1 <= lineArr.size() - 1)
{
sildingLine .= lineArr[A_Index + i1]
}
}
if (StrLen(sildingLine) < matchStringLEN)
{
break
}


print("!!!!111111111!!!!!!: " . sildingLine)

if (sildingLine = matchString)
{
hasFound := 1

if (isStart != 1)
{
print("!!!!2222222222!!!!!!: " . lineArr[i1 - 1])
print("!!!!2222222222.555555555!!!!!!: " . lineArr[i1])
}
if (i1 + matchStringLEN < lineArr.size())
{

print("!!!!3333333333.5555555555!!!!!!: " . lineArr[i1 + matchStringLEN - 1])
print("!!!!3333333333!!!!!!: " . lineArr[i1 + matchStringLEN])
}





}



if (hasFound = 1)
{
hasFound2 := 0
}


i1++
}

if (hasFound = 0)
{
return lineOut
}

}


return lineOut
}

main
print(await HTVMmatchStrRrplace("hi man", "hi", "hello"))
print(await HTVMmatchStrRrplace("hi man", "man", "woman"))

print(await HTVMmatchStrRrplace("func1(man.hello())", ".hello", ".mello"))
print(await HTVMmatchStrRrplace("func1(var1 plus plus var2)", "plus plus", "+"))

