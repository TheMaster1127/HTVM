print(str5)
print(str10)
if (Trim(str5) != "") {
    StringTrimRight, str5, str5, 1
}
if (Trim(str10) != "") {
    StringTrimRight, str10, str10, 1
}
str5 := Trim(str5)
str10 := Trim(str10)
if (Trim(str5) != "") and (Trim(str10) != "") {
    Loop, Parse, str5, `n, `r {
        str11 .= A_LoopField . ", "
    }
    Loop, Parse, str10, `n, `r {
        str12 .= A_LoopField . ", "
    }
    StringTrimRight, str12, str12, 2
    if (langToConvertTo = "dart") {
        str12 := "[" . str12 . "]"
    }
    if (langToConvertTo = "lua") {
        Loop, Parse, str12, `, {
            str14 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . ", "
        }
        StringTrimRight, str14, str14, 2
        str13 .= "{" . Chr(10)
        Loop, Parse, str12, `, {
            str13 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . " = " . Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . " or " . Trim(StrSplit(Trim(A_LoopField), " = ", 2)) . Chr(10)
        }
        str12 := str14
    }
    if (langToConvertTo = "go") {
        str14 := "__HTVM_V2_TO_GO_optionalParams__ ...interface{}"
        str13 .= "{" . Chr(10) . "var "
        Loop, Parse, str12, `, {
            str13 .= Trim(StrSplit(Trim(StrSplit(Trim(A_LoopField), " = ", 1)), " ", 1)) . ", "
        }
        StringTrimRight, str13, str13, 2
        str13 .= " interface{}" . Chr(10)
        Loop, Parse, str12, `, {
            str16 := Trim(StrSplit(Trim(StrSplit(Trim(A_LoopField), " = ", 1)), " ", 1))
            str17 := Trim(StrSplit(Trim(A_LoopField), " = ", 2))
            str13 .= "if len(__HTVM_V2_TO_GO_optionalParams__) " . Chr(62) . " " . STR(A_Index) . Chr(10) . "{" . Chr(10) . str16 . " = __HTVM_V2_TO_GO_optionalParams__[" . STR(A_Index) . "]" . Chr(10) . "}" . Chr(10) . "else" . Chr(10) . "{" . Chr(10) . str16 . " = " . str17 . Chr(10) . "}" . Chr(10)
        }
        str12 := str14
    }
    str11 .= str12
}
if (Trim(str5) != "") and (Trim(str10) = "") {
    Loop, Parse, str5, `n, `r {
        str11 .= A_LoopField . ", "
    }
    StringTrimRight, str11, str11, 2
}
if (Trim(str5) = "") and (Trim(str10) != "") {
    Loop, Parse, str10, `n, `r {
        str11 .= A_LoopField . ", "
    }
    StringTrimRight, str11, str11, 2
    if (langToConvertTo = "dart") {
        str11 := "[" . str11 . "]"
    }
    if (langToConvertTo = "lua") {
        Loop, Parse, str11, `, {
            str14 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . ", "
        }
        StringTrimRight, str14, str14, 2
        str13 .= "{" . Chr(10)
        Loop, Parse, str11, `, {
            str13 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . " = " . Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . " or " . Trim(StrSplit(Trim(A_LoopField), " = ", 2)) . Chr(10)
        }
        str11 := str14
    }
    if (langToConvertTo = "go") {
        str14 := "__HTVM_V2_TO_GO_optionalParams__ ...interface{}"
        str13 .= "{" . Chr(10) . "var "
        Loop, Parse, str11, `, {
            str13 .= Trim(StrSplit(Trim(StrSplit(Trim(A_LoopField), " = ", 1)), " ", 1)) . ", "
        }
        StringTrimRight, str13, str13, 2
        str13 .= " interface{}" . Chr(10)
        Loop, Parse, str11, `, {
            str16 := Trim(StrSplit(Trim(StrSplit(Trim(A_LoopField), " = ", 1)), " ", 1))
            str17 := Trim(StrSplit(Trim(A_LoopField), " = ", 2))
            str13 .= "if len(__HTVM_V2_TO_GO_optionalParams__) " . Chr(62) . " " . STR(A_Index) . Chr(10) . "{" . Chr(10) . str16 . " = __HTVM_V2_TO_GO_optionalParams__[" . STR(A_Index) . "]" . Chr(10) . "}" . Chr(10) . "else" . Chr(10) . "{" . Chr(10) . str16 . " = " . str17 . Chr(10) . "}" . Chr(10)
        }
        if (langToConvertTo = "java") {
            "public static void assdfdg(String var1, String var2, String var3)" . Chr(10) . "{" . Chr(10) . "assdfdg(var1, var2, var3, " . Chr(34) . "hi1" . Chr(34) . ", " . Chr(34) . "hi2" . Chr(34) . ");" . Chr(10) . "}" . Chr(10)
            Loop, Parse, str11, `, {
                str14 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . ", "
            }
            StringTrimRight, str14, str14, 2
            Loop, Parse, str11, `, {
                str13 .= Trim(StrSplit(Trim(A_LoopField), " = ", 1)) . ", "
                str13 .= "public static " . getFuncTypeConvert(str3) . " " . str2 . "(" . str11 . ")" . Chr(10)
            }
        }
        str11 := str14
    }
}
print(str11)
